plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
    id 'maven-publish'
    id "signing"
}

group = "ch.confinale"
version = "1.2.0"
archivesBaseName = "addressr"

repositories {
    mavenCentral()
    mavenLocal()
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.yaml:snakeyaml:1.33")
    implementation("com.github.spullara.mustache.java:compiler:0.9.10")

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.2")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.9.2")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'ch.confinale'
            artifactId = 'addressr'
            version = '1.2.0'

            from components.java


            pom {
                name = 'addressr'
                description = 'A library to format addresses in its locale format'
                url = 'https://github.com/confinale/addressr.git/'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'cn-wolski'
                        name = 'Michael Wolski'
                        email = 'michael.wolski@confinale.ch'
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com:confinale/addressr.git'
                    developerConnection = 'scm:git:ssh:git@github.com:confinale/addressr.git'
                    url = 'https://github.com/confinale/addressr.git/'
                }
            }
        }
    }

    repositories {
        maven {
            name 'nexus'
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.repoUser
                password = project.repoPassword
            }
        }
    }
}


signing {
    sign publishing.publications.mavenJava
}

artifacts {
    archives javadocJar, sourcesJar
}

tasks.withType(Test) {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}

compileJava   {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}
